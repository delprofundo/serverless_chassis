service: YYYYY-service
frameworkVersion:  ">=1.67.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  tracing: true
  stage: ${opt:stage, self:custom.defaultStage}
  memorySize: 256
  timeout: 20
  logRetentionInDays: 7
  stackTags:
    Name: ${self:service.name}
    Environment: ${opt:region, self:provider.region}
  environment:
    DEPLOY_REGION: ${opt:region, self:provider.region}
    API_ROOT: ${self:custom.domainName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
        - cognito-idp:Admin*
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: "*"
package:
  include:
    - configurators
    - lib
  exclude:
    - tmp
    - .git
    - .idea
    - support
plugins:
  - serverless-plugin-tracing
  - serverless-webpack
  - serverless-plugin-bind-deployment-id
  - serverless-pseudo-parameters
  - serverless-certificate-creator
custom:
  customCertificate:
    certificateName: "*.groklobster.io"
    idempotencyToken: "asgroklobsterio"
    hostedZoneName: "groklobster.io"
    region: us-east-1
  #warmup:
  #  cleanFolders: false
  local: ${file(./environmentSpecific.yml)} #a file for deployment specific values, can be supplied by Param Store
  webpackIncludeModules: true
  grub: YYYYY-api
  defaultStage: dev
  basePath: YYYYYs
  jwaPemPath: ${self:custom.local.jwaPemPath}
  kmsKeyPath: ${self:custom.local.kmsKeyPath}
  maxTokenExpiryPath: ${self:custom.local.maxTokenExpiryPath}
  systemMemberIdPath: ${self:custom.local.systemMemberIdPath}
  domainName: ${self:custom.local.customDomainName}
  profiles:
    dev: default
  #defaultRegion: us-east-1
  regions:
    dev: us-east-1
    uat: us-east-1
    prod: ap-southeast-2
functions:
  ping-cert:
    handler: handler.ping
    name: ${self:provider.stage}-${self:custom.grub}-util-ping
    description: a simple payload ping GET test
    events:
    - http:
        path: /ping
        method: get
        cors: true
# Resources are essentially CloudFormation scripts. These are kept in the configurators folder
resources:
  Resources:
    #this entry allows access to the otherwise tricky deployment resource
    __deployment__:
      Properties:
        Description: Deployment alias for resources that depend on deployment id
    #ApiGatewayStage: ${file(configurators/apiGatewayStage.yaml)}
    #IamPolicyLambdaDynamo: ${file(configurators/iamPolicyLambdaDynamo.yaml)}
    #PathMapping: ${file(configurators/pathMapping.yaml)}

